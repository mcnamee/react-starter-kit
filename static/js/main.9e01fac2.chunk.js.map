{"version":3,"sources":["lib/cookies.js","constants/config.js","constants/messages.js","lib/jwt.js","lib/api.js","lib/format-error-messages.js","store/articles.js","lib/images.js","lib/string.js","lib/pagination.js","models/articles.js","store/index.js","lib/service-worker.js","routes/Route.js","components/UI/Header.js","components/UI/MobileTabBar.js","components/UI/Footer.js","components/UI/PageTitle.js","components/Templates/Dashboard.js","components/Articles/Form.js","containers/Articles/Form.js","components/UI/TablePagination.js","components/Articles/List.js","containers/Articles/List.js","components/Articles/Single.js","containers/Articles/Single.js","components/About.js","components/UI/Error.js","routes/index.js","components/UI/Loading.js","index.js"],"names":["setCookie","cookieName","cookieValue","expireInDays","d","Date","setTime","getTime","expires","toUTCString","document","cookie","getCookie","parts","split","length","pop","shift","host","window","location","env","includes","appName","isDevEnv","ENV","dateFormat","apiBaseUrl","gaTrackingId","successMessages","errorMessages","hasActiveAuthToken","token","decoded","jwt","decode","exp","moment","unix","today","diff","error","hasAuthToken","refreshAuthToken","a","axios","post","response","data","Error","defaults","baseURL","Config","headers","common","Accept","interceptors","request","use","inputConfig","config","Authorization","res","status","startsWith","errors","Object","entries","forEach","v","join","message","listPaginated","1","placeholder","id","name","content","excerpt","image","date","slug","link","listFlat","meta","page","lastPage","total","lastSync","pagination","userInput","email","getFeaturedImageUrl","item","_embedded","media_details","sizes","full","source_url","stripHtml","string","returnString","replace","map","RegExp","upTo","parseInt","p","push","title","transform","rendered","charAt","toUpperCase","slice","contentRaw","format","namespace","state","initialState","effects","dispatch","fetchList","forceSync","rootState","articles","isBefore","add","HandleErrorMessage","Api","get","fetchSingle","save","keys","replaceUserInput","reducers","payload","newList","k","flat","persistPlugin","createPersistPlugin","version","storage","blacklist","loadingPlugin","createLoadingPlugin","configureStore","store","init","models","redux","middlewares","plugins","persistor","getPersistor","Boolean","hostname","match","CustomRoute","props","render","component","computedMatch","params","defaultProps","Header","useState","isOpen","setIsOpen","Navbar","dark","color","expand","to","className","style","width","height","viewBox","xmlns","preserveAspectRatio","fill","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","pathname","withRouter","pills","icon","faTachometerAlt","faPalette","faMoneyBillWave","Footer","Container","Row","Col","PageTitle","Jumbotron","Template","pageTitle","children","noPadding","Helmet","ArticlesForm","loading","success","onFormSubmit","defaultValues","useForm","register","handleSubmit","setValue","Card","CardBody","Form","onSubmit","Alert","FormGroup","Label","for","Input","type","disabled","invalid","innerRef","required","onChange","e","target","value","Button","size","ArticlesFormContainer","setState","Component","connect","Fragment","Pagination","aria-label","PaginationItem","key","List","history","TablePagination","Table","hover","minWidth","article","ArticlesListContainer","componentDidMount","fetchData","componentDidUpdate","prevProps","incrementPage","reFetch","Single","md","offset","CardImg","top","src","alt","dangerouslySetInnerHTML","__html","ArticlesSingleContainer","faCertificate","faPlus","faUserCircle","xs","lg","rel","href","Index","path","exact","About","ArticlesList","ArticlesSingle","Loading","Progress","bar","animated","Root","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9e01fac2.chunk.js","sourcesContent":["/* global document */\n\n/**\n * Create a new Cookie\n * @param {str} cookieName\n * @param {str} cookieValue\n * @param {int} expireInDays\n */\nexport const setCookie = (cookieName, cookieValue, expireInDays) => {\n  const d = new Date();\n  d.setTime(d.getTime() + (expireInDays * 24 * 60 * 60 * 1000));\n  const expires = `expires=${d.toUTCString()}`;\n\n  document.cookie = `${cookieName}=${cookieValue};${expires};path=/`;\n};\n\n/**\n * Get the value of a Cookie\n * @param {str} cookieName\n */\nexport const getCookie = (cookieName) => {\n  const value = `; ${document.cookie}`;\n  const parts = value.split(`; ${cookieName}=`);\n\n  if (parts.length === 2) return parts.pop().split(';').shift();\n\n  return false;\n};\n\n/**\n * Deletes a Cookie by cookie name (expires it)\n * @param {str} cookieName\n */\nexport const deleteCookie = (cookieName) => {\n  document.cookie = `${cookieName}=;expires=Thu, 01 Jan 1970 00:00:01 GMT;`;\n};\n","/* global window */\nconst { host } = window.location;\n\n/**\n * Environments\n */\nlet env = 'production'; // Defaults to production\nif (process.env.NODE_ENV === 'development' || host.includes('local')) env = 'development';\nif (host.includes('stage.')) env = 'stage';\n\n/**\n * Config object to export\n */\nexport default {\n  // App Details\n  appName: 'ReactStarterKit',\n\n  // Build Configuration - eg. Debug or Release?\n  isDevEnv: (env === 'development'),\n  ENV: env,\n\n  // Date Format\n  dateFormat: 'Do MMM YYYY',\n\n  // API\n  apiBaseUrl: (env === 'production')\n    ? 'https://digitalsupply.co/wp-json/wp'\n    : 'https://digitalsupply.co/wp-json/wp',\n\n  // Google Analytics - uses a 'dev' account while we're testing\n  gaTrackingId: (env === 'production') ? 'UA-84284256-2' : 'UA-84284256-1',\n};\n","export const generalMessages = {};\n\nexport const successMessages = {\n  // Defaults\n  defaultForm: 'Success - Form Saved',\n\n  // Member\n  login: 'You are now logged in',\n  signUp: 'You are now signed up. Please login to continue.',\n  forgotPassword: 'Password reset. Please check your email.',\n};\n\nexport const errorMessages = {\n  // Defaults\n  default: 'Hmm, an unknown error occured',\n  timeout: 'Server Timed Out. Check your internet connection',\n  invalidJson: 'Response returned is not valid JSON',\n  missingData: 'Missing data',\n\n  // Member\n  memberNotAuthd: 'You need to be logged in, to update your profile',\n  memberExists: 'Member already exists',\n  missingFirstName: 'First name is missing',\n  missingLastName: 'Last name is missing',\n  missingEmail: 'Email is missing',\n  missingPassword: 'Password is missing',\n  passwordsDontMatch: 'Passwords do not match',\n\n  // Articles\n  articlesEmpty: 'No articles found',\n  articles404: 'This article could not be found',\n};\n","import axios from 'axios';\nimport jwt from 'jsonwebtoken';\nimport moment from 'moment';\nimport { getCookie, setCookie, deleteCookie } from './cookies';\nimport { errorMessages } from '../constants/messages';\n\n/**\n * Does the current user have a valid and active JWT Auth Token?\n * - We'll test by getting the auth token from the cookie\n * - and decoding to see if it's still active\n * @return {bool}\n */\nexport const hasActiveAuthToken = () => {\n  // Does a token exist?\n  const token = getCookie('Auth:Token') || null;\n  if (!token) {\n    return false;\n  }\n\n  // Is the token a valid JWT token?\n  try {\n    const decoded = jwt.decode(token);\n\n    if (decoded.exp) {\n      const expires = moment.unix(decoded.exp);\n      const today = moment();\n\n      // Expires in the future, so by all accounts, we're authenticated\n      if (expires.diff(today) > 0) {\n        return true;\n      }\n    }\n  } catch (error) { return false; }\n\n  return false;\n};\n\n/**\n * Does the current user have an Auth Token set?\n * - We use this primarily for routes.\n * - We don't use hasActiveAuthToken for routes, because we don't want the app to\n * - kick them out before the API request refreshes the token\n * - (token refreshes are handled by an API interceptor)\n * @return {bool}\n */\nexport const hasAuthToken = () => {\n  // Does a token exist?\n  const token = getCookie('Auth:Token') || null;\n  if (!token) {\n    return false;\n  }\n\n  // Is the token a valid JWT token? (does it decode and have an expiry?)\n  try {\n    const decoded = jwt.decode(token);\n\n    if (decoded.exp) {\n      return true;\n    }\n  } catch (error) { return false; }\n\n  return false;\n};\n\n/**\n * Refresh a token (be-it expired or not)\n * @return {str} the token\n */\nexport const refreshAuthToken = async () => {\n  // Does a token exist?\n  const token = getCookie('Auth:Token') || null;\n  if (!token) {\n    return false;\n  }\n\n  // Delete the cookie so that future requests don't attempt to use it\n  // - which may cause an infinite loop\n  // - (i.e. refresh token request checking for token and trying to refresh and on and on...)\n  deleteCookie('Auth:Token');\n\n  // Is the token a valid JWT token? (does it decode and have an expiry?)\n  try {\n    const response = await axios.post('/v2/refresh-auth', { token });\n\n    const { data } = response;\n    if (!response || !data || !data.token) {\n      throw new Error(errorMessages.memberNotAuthd);\n    }\n\n    // Save the token to a cookie\n    setCookie('Auth:Token', data.token, 30);\n\n    return data.token;\n  } catch (error) { return false; }\n};\n","import axios from 'axios';\nimport { getCookie } from './cookies';\nimport Config from '../constants/config';\nimport { hasActiveAuthToken, hasAuthToken, refreshAuthToken } from './jwt';\n\n/**\n * Axios defaults\n */\naxios.defaults.baseURL = Config.apiBaseUrl;\n// axios.defaults.withCredentials = true;\n\n// Headers\naxios.defaults.headers.common['Content-Type'] = 'application/json';\naxios.defaults.headers.common.Accept = 'application/json';\n\n/**\n * Request Interceptor\n */\naxios.interceptors.request.use(\n  async (inputConfig) => {\n    const config = inputConfig;\n\n    try {\n      // Check if the token has or is about to expire, and refresh it\n      if (hasActiveAuthToken()) {\n        // Add the token to the Authorization header\n        config.headers.common.Authorization = `Bearer ${getCookie('Auth:Token')}`;\n\n      // Otherwise, attempt to refresh the token\n      } else if (hasAuthToken()) {\n        const token = await refreshAuthToken();\n\n        if (token) {\n          config.headers.common.Authorization = `Bearer ${token}`;\n        }\n      }\n    } catch (error) { /* Nothing */ }\n\n    return config;\n  },\n  (error) => {\n    throw error;\n  },\n);\n\n/**\n * Response Interceptor\n */\naxios.interceptors.response.use(\n  (res) => {\n    // Status code isn't a success code - throw error\n    if (!`${res.status}`.startsWith('2')) {\n      throw res.data;\n    }\n\n    // Otherwise just return the data\n    return res;\n  },\n  (error) => {\n    // Pass the response from the API, rather than a status code\n    if (error && error.response && error.response.data) {\n      throw error.response.data;\n    }\n    throw error;\n  },\n);\n\nexport default axios;\n","/**\n * Create a readable error message for the front-end user\n */\nexport default (error) => {\n  /*\n    For an error response like:\n    {\n      \"message\": \"422 Unprocessable Entity\",\n      \"errors\": {\n        \"email\": [\n          \"The email must be a valid email address.\"\n        ]\n      }\n    }\n   */\n  if (error && error.errors) {\n    let errors = '';\n    Object.entries(error.errors).forEach((v) => {\n      errors += v[1].join(', ');\n    });\n    return Error(errors);\n  }\n\n  /*\n    For an error response like:\n    {\n      \"error\": {\n        \"message\": \"403 Forbidden\",\n        \"status_code\": 403\n      }\n    }\n   */\n  if (error && error.message) {\n    return Error(error.message);\n  }\n\n  // When an Error - return the error\n  if (error instanceof Error) {\n    return error;\n  }\n\n  // Otherwise create an error\n  return new Error('Uh oh - something happened');\n};\n","export default {\n  listPaginated: {\n    1: [{\n      placeholder: true,\n      id: 0,\n      name: '---- --- -- ------',\n      content: '---- --- -- ------ ---- --- -- ------ ---- --- -- ------ ---- --- -- ------',\n      excerpt: '---- --- -- ------ ---- --- -- ------ ---- --- -- ------ ---- --- -- ------',\n      image: 'https://www.digitalsupply.co/wp-content/uploads/2018/03/glacier-blue.jpg',\n      date: '-- / -- / ----',\n      slug: '-----',\n      link: '----.---.--/------',\n    }],\n  },\n  listFlat: [{\n    placeholder: true,\n    id: 0,\n    name: '---- --- -- ------',\n    content: '---- --- -- ------ ---- --- -- ------ ---- --- -- ------ ---- --- -- ------',\n    excerpt: '---- --- -- ------ ---- --- -- ------ ---- --- -- ------ ---- --- -- ------',\n    image: 'https://www.digitalsupply.co/wp-content/uploads/2018/03/glacier-blue.jpg',\n    date: '-- / -- / ----',\n    slug: '-----',\n    link: '----.---.--/------',\n  }],\n  meta: {\n    page: 1,\n    lastPage: null,\n    total: null,\n  },\n  lastSync: {},\n  pagination: [],\n  userInput: { email: '' },\n};\n","/**\n * Sort through the mass amounts of data in\n * an endpoint and return the featured image URL\n */\n// eslint-disable-next-line\nexport const getFeaturedImageUrl = (item) => (\n  (item._embedded\n      && item._embedded['wp:featuredmedia']\n      && item._embedded['wp:featuredmedia']['0']\n      && item._embedded['wp:featuredmedia']['0'].media_details\n      && item._embedded['wp:featuredmedia']['0'].media_details.sizes\n      && item._embedded['wp:featuredmedia']['0'].media_details.sizes.full\n      && item._embedded['wp:featuredmedia']['0'].media_details.sizes.full.source_url)\n    || null\n);\n","/**\n * Uppercase the first letter in a string\n * @param {str} str\n * @return {str}\n */\nexport const ucfirst = (string) => {\n  if (!string) {\n    return '';\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n};\n\n/**\n * Uppercase the first letter in a string\n * @param {str} input content\n * @param {num} number of words to cut off at\n * @return {str}\n */\nexport const truncate = (inputContent, numWords) => {\n  if (!inputContent) {\n    return '';\n  }\n  const limit = !numWords ? 100 : numWords;\n\n  // Trim whitespace\n  let content = inputContent.trim();\n\n  // Convert the content into an array of words\n  const contentArr = content.split(' ');\n\n  // Remove any words above the limit\n  content = contentArr.slice(0, limit);\n\n  // Convert the array of words back into a string\n  return `${content.join(' ')}${contentArr.length > limit ? '…' : ''}`;\n};\n\n/**\n * Strip any HTML from a string\n * @param {str} string\n */\nexport const stripHtml = (string) => {\n  let returnString = string;\n\n  // Remove DOM tags\n  returnString = returnString.replace(/<[^>]*>?/gm, '');\n\n  // Remove entities\n  const entities = [\n    ['amp', '&'],\n    ['apos', \"'\"],\n    ['#x27', \"'\"],\n    ['#x2F', '/'],\n    ['#39', \"'\"],\n    ['#47', '/'],\n    ['lt', '<'],\n    ['gt', '>'],\n    ['nbsp', ' '],\n    ['quot', '\"'],\n    ['hellip', '...'],\n    ['#8217', \"'\"],\n    ['#8230', '...'],\n    ['#8211', '-'],\n  ];\n\n  entities.map((item) => { // eslint-disable-line\n    returnString = returnString.replace(new RegExp(`&${item[0]};`, 'g'), item[1]);\n  });\n\n  return returnString;\n};\n","export default (lastPage, link) => {\n  const pagination = [];\n  const upTo = parseInt(lastPage, 10);\n\n  if (upTo > 1) {\n    for (let p = 1; p <= upTo; p++) { // eslint-disable-line\n      if (p === 1) {\n        pagination.push({ title: p, link });\n      } else {\n        pagination.push({ title: p, link: `${link}${p}` });\n      }\n    }\n  }\n\n  return pagination;\n};\n","import moment from 'moment';\nimport Api from '../lib/api';\nimport HandleErrorMessage from '../lib/format-error-messages';\nimport initialState from '../store/articles';\nimport Config from '../constants/config';\nimport { getFeaturedImageUrl } from '../lib/images';\nimport { ucfirst, stripHtml } from '../lib/string';\nimport { errorMessages, successMessages } from '../constants/messages';\nimport pagination from '../lib/pagination';\n\n/**\n * Transform the endpoint data structure into our redux store format\n * @param {obj} item\n */\nconst transform = (item) => ({\n  id: item.id || 0,\n  name: item.title && item.title.rendered ? ucfirst(stripHtml(item.title.rendered)) : '',\n  content: item.content && item.content.rendered ? stripHtml(item.content.rendered) : '',\n  contentRaw: item.content && item.content.rendered,\n  excerpt: item.excerpt && item.excerpt.rendered ? stripHtml(item.excerpt.rendered) : '',\n  date: moment(item.date).format(Config.dateFormat) || '',\n  slug: item.slug || null,\n  link: item.link || null,\n  image: getFeaturedImageUrl(item),\n});\n\nexport default {\n  namespace: 'articles',\n\n  /**\n   *  Initial state\n   */\n  state: initialState,\n\n  /**\n   * Effects/Actions\n   */\n  effects: (dispatch) => ({\n    /**\n     * Get a list from the API\n     * @param {obj} rootState\n     * @returns {Promise}\n     */\n    async fetchList({ forceSync = false, page = 1 } = {}, rootState) {\n      const { articles = {} } = rootState;\n      const { lastSync = {}, meta = {} } = articles;\n      const { lastPage } = meta;\n\n      // Only sync when it's been 5mins since last sync\n      if (lastSync[page]) {\n        if (!forceSync && moment().isBefore(moment(lastSync[page]).add(5, 'minutes'))) {\n          return true;\n        }\n      }\n\n      // We've reached the end of the list\n      if (page && lastPage && page > lastPage) {\n        throw HandleErrorMessage({ message: `Page ${page} does not exist` });\n      }\n\n      try {\n        const response = await Api.get(`/v2/posts?per_page=4&page=${page}&orderby=modified&_embed`);\n        const { data, headers } = response;\n\n        return !data || data.length < 1\n          ? true\n          : dispatch.articles.replace({ data, headers, page });\n      } catch (error) {\n        throw HandleErrorMessage(error);\n      }\n    },\n\n    /**\n     * Get a single item from the API\n     * @param {number} id\n     * @returns {Promise[obj]}\n     */\n    async fetchSingle(id) {\n      try {\n        const response = await Api.get(`/v2/posts/${id}?_embed`);\n        const { data } = response;\n\n        if (!data) {\n          throw new Error({ message: errorMessages.articles404 });\n        }\n\n        return transform(data);\n      } catch (error) {\n        throw HandleErrorMessage(error);\n      }\n    },\n\n    /**\n     * Save date to redux store\n     * @param {obj} data\n     * @returns {Promise[obj]}\n     */\n    async save(data) {\n      try {\n        if (Object.keys(data).length < 1) {\n          throw new Error({ message: errorMessages.missingData });\n        }\n\n        dispatch.articles.replaceUserInput(data);\n        return successMessages.defaultForm; // Message for the UI\n      } catch (error) {\n        throw HandleErrorMessage(error);\n      }\n    },\n  }),\n\n  /**\n   * Reducers\n   */\n  reducers: {\n    /**\n     * Replace list in store\n     * @param {obj} state\n     * @param {obj} payload\n     */\n    replace(state, payload) {\n      let newList = null;\n      const { data, headers, page } = payload;\n\n      // Loop data array, saving items in a usable format\n      if (data && typeof data === 'object') {\n        newList = data.map((item) => transform(item));\n      }\n\n      // Create our paginated and flat lists\n      const listPaginated = page === 1 ? { [page]: newList } : { ...state.listPaginated, [page]: newList };\n      const listFlat = Object.keys(listPaginated).map((k) => listPaginated[k]).flat() || [];\n\n      return newList\n        ? {\n          ...state,\n          listPaginated,\n          listFlat,\n          lastSync: page === 1\n            ? { [page]: moment().format() }\n            : { ...state.lastSync, [page]: moment().format() },\n          meta: {\n            page,\n            lastPage: parseInt(headers['x-wp-totalpages'], 10) || null,\n            total: parseInt(headers['x-wp-total'], 10) || null,\n          },\n          pagination: pagination(headers['x-wp-totalpages'], '/articles/'),\n        }\n        : initialState;\n    },\n\n    /**\n     * Save form data\n     * @param {obj} state\n     * @param {obj} payload\n     */\n    replaceUserInput(state, payload) {\n      return {\n        ...state,\n        userInput: payload,\n      };\n    },\n  },\n};\n","/* global */\nimport { init } from '@rematch/core';\nimport createPersistPlugin, { getPersistor } from '@rematch/persist';\nimport createLoadingPlugin from '@rematch/loading';\nimport storage from 'redux-persist/es/storage';\nimport * as models from '../models';\n\n// Create plugins\nconst persistPlugin = createPersistPlugin({\n  version: 2,\n  storage,\n  blacklist: [],\n});\nconst loadingPlugin = createLoadingPlugin({});\n\nconst configureStore = () => {\n  const store = init({\n    models,\n    redux: {\n      middlewares: [],\n    },\n    plugins: [persistPlugin, loadingPlugin],\n  });\n\n  const persistor = getPersistor();\n  const { dispatch } = store;\n\n  return { persistor, store, dispatch };\n};\n\nexport default configureStore;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route } from 'react-router-dom';\n\n/**\n * Custom Route Component, to pass URL params simpler\n */\nconst CustomRoute = ({ ...props }) => (\n  <Route render={() => <props.component {...props.computedMatch.params} />} />\n);\n\nCustomRoute.propTypes = {\n  computedMatch: PropTypes.shape({ params: PropTypes.shape({}) }),\n};\n\nCustomRoute.defaultProps = {\n  computedMatch: { params: {} },\n};\n\nexport default CustomRoute;\n","/* global window */\nimport React, { useState } from 'react';\nimport {\n  Nav,\n  Navbar,\n  NavItem,\n  Collapse,\n  NavbarToggler,\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Config from '../../constants/config';\n\nconst Header = () => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <header>\n      <Navbar dark color=\"primary\" expand=\"md\">\n        <Link to=\"/\" className=\"navbar-brand\" style={{ color: '#FFF' }}>\n          {/* eslint-disable */}\n          <svg width=\"30\" height=\"30\" viewBox=\"0 0 256 230\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMinYMin meet\">\n            <path d=\"M201.025 79.674a151.364 151.364 0 0 0-7.274-2.292 137.5 137.5 0 0 0 1.124-4.961c5.506-26.728 1.906-48.26-10.388-55.348-11.787-6.798-31.065.29-50.535 17.233a151.136 151.136 0 0 0-5.626 5.163 137.573 137.573 0 0 0-3.744-3.458c-20.405-18.118-40.858-25.752-53.139-18.643-11.776 6.817-15.264 27.06-10.307 52.39a150.91 150.91 0 0 0 1.67 7.484c-2.894.822-5.689 1.698-8.363 2.63-23.922 8.34-39.2 21.412-39.2 34.97 0 14.004 16.4 28.05 41.318 36.566a128.44 128.44 0 0 0 6.11 1.91 147.813 147.813 0 0 0-1.775 8.067c-4.726 24.89-1.035 44.653 10.71 51.428 12.131 6.995 32.491-.195 52.317-17.525 1.567-1.37 3.14-2.823 4.715-4.346a148.34 148.34 0 0 0 6.108 5.573c19.204 16.525 38.17 23.198 49.905 16.405 12.12-7.016 16.058-28.247 10.944-54.078-.39-1.973-.845-3.988-1.355-6.04 1.43-.422 2.833-.858 4.202-1.312 25.904-8.582 42.757-22.457 42.757-36.648 0-13.607-15.77-26.767-40.174-35.168z\" fill=\"#fff\" />\n            <path d=\"M195.406 142.328c-1.235.409-2.503.804-3.795 1.187-2.86-9.053-6.72-18.68-11.442-28.625 4.507-9.71 8.217-19.213 10.997-28.208 2.311.67 4.555 1.375 6.717 2.12 20.91 7.197 33.664 17.84 33.664 26.04 0 8.735-13.775 20.075-36.14 27.486zm-9.28 18.389c2.261 11.422 2.584 21.749 1.086 29.822-1.346 7.254-4.052 12.09-7.398 14.027-7.121 4.122-22.35-1.236-38.772-15.368-1.883-1.62-3.78-3.35-5.682-5.18 6.367-6.964 12.73-15.06 18.94-24.05 10.924-.969 21.244-2.554 30.603-4.717.46 1.86.87 3.683 1.223 5.466zm-93.85 43.137c-6.957 2.457-12.498 2.527-15.847.596-7.128-4.11-10.09-19.98-6.049-41.265a138.507 138.507 0 0 1 1.65-7.502c9.255 2.047 19.5 3.52 30.45 4.408 6.251 8.797 12.798 16.883 19.396 23.964a118.863 118.863 0 0 1-4.305 3.964c-8.767 7.664-17.552 13.1-25.294 15.835zm-32.593-61.58c-11.018-3.766-20.117-8.66-26.354-14-5.604-4.8-8.434-9.565-8.434-13.432 0-8.227 12.267-18.722 32.726-25.855a139.276 139.276 0 0 1 7.777-2.447c2.828 9.197 6.537 18.813 11.013 28.537-4.534 9.869-8.296 19.638-11.15 28.943a118.908 118.908 0 0 1-5.578-1.746zm10.926-74.37c-4.247-21.703-1.427-38.074 5.67-42.182 7.56-4.376 24.275 1.864 41.893 17.507 1.126 1 2.257 2.047 3.39 3.13-6.564 7.049-13.051 15.074-19.248 23.82-10.627.985-20.8 2.567-30.152 4.686a141.525 141.525 0 0 1-1.553-6.962zm97.467 24.067a306.982 306.982 0 0 0-6.871-11.3c7.21.91 14.117 2.12 20.603 3.601-1.947 6.241-4.374 12.767-7.232 19.457a336.42 336.42 0 0 0-6.5-11.758zm-39.747-38.714c4.452 4.823 8.911 10.209 13.297 16.052a284.245 284.245 0 0 0-26.706-.006c4.39-5.789 8.887-11.167 13.409-16.046zm-40.002 38.78a285.24 285.24 0 0 0-6.378 11.685c-2.811-6.667-5.216-13.222-7.18-19.552 6.447-1.443 13.322-2.622 20.485-3.517a283.79 283.79 0 0 0-6.927 11.384zm7.133 57.683c-7.4-.826-14.379-1.945-20.824-3.348 1.995-6.442 4.453-13.138 7.324-19.948a283.494 283.494 0 0 0 6.406 11.692 285.27 285.27 0 0 0 7.094 11.604zm33.136 27.389c-4.575-4.937-9.138-10.397-13.595-16.27 4.326.17 8.737.256 13.22.256 4.606 0 9.159-.103 13.64-.303-4.4 5.98-8.843 11.448-13.265 16.317zm46.072-51.032c3.02 6.884 5.566 13.544 7.588 19.877-6.552 1.495-13.625 2.699-21.078 3.593a337.537 337.537 0 0 0 6.937-11.498 306.632 306.632 0 0 0 6.553-11.972zm-14.915 7.15a316.478 316.478 0 0 1-10.84 17.49c-6.704.479-13.632.726-20.692.726-7.031 0-13.871-.219-20.458-.646A273.798 273.798 0 0 1 96.72 133.28a271.334 271.334 0 0 1-9.64-18.206 273.864 273.864 0 0 1 9.611-18.216v.002a271.252 271.252 0 0 1 10.956-17.442c6.72-.508 13.61-.774 20.575-.774 6.996 0 13.895.268 20.613.78a290.704 290.704 0 0 1 10.887 17.383 316.418 316.418 0 0 1 9.741 18.13 290.806 290.806 0 0 1-9.709 18.29zm19.913-107.792c7.566 4.364 10.509 21.961 5.755 45.038a127.525 127.525 0 0 1-1.016 4.492c-9.374-2.163-19.554-3.773-30.212-4.773-6.209-8.841-12.642-16.88-19.1-23.838a141.92 141.92 0 0 1 5.196-4.766c16.682-14.518 32.273-20.25 39.377-16.153z\" fill=\"#4843E3\" />\n            <path d=\"M128.221 94.665c11.144 0 20.177 9.034 20.177 20.177 0 11.144-9.033 20.178-20.177 20.178-11.143 0-20.177-9.034-20.177-20.178 0-11.143 9.034-20.177 20.177-20.177\" fill=\"#fff\" />\n          </svg>\n          {/* eslint-enable */}\n          {Config.appName}\n        </Link>\n\n        <NavbarToggler onClick={() => setIsOpen(!isOpen)} />\n\n        <Collapse isOpen={isOpen} navbar>\n          <Nav className=\"ml-auto\" navbar>\n            <NavItem>\n              <Link className={`nav-link ${window.location.pathname === '/' && 'active'}`} to=\"/\">\n                <span>Home</span>\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link\n                className={`nav-link ${window.location.pathname.startsWith('/article') && 'active'}`}\n                to=\"/articles/\"\n              >\n                <span>Articles</span>\n              </Link>\n            </NavItem>\n            <NavItem>\n              <Link\n                className={`nav-link ${window.location.pathname.startsWith('/example-form') && 'active'}`}\n                to=\"/example-form/\"\n              >\n                <span>Form</span>\n              </Link>\n            </NavItem>\n          </Nav>\n        </Collapse>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","/* global window */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Nav,\n  NavItem,\n} from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTachometerAlt, faPalette, faMoneyBillWave } from '@fortawesome/free-solid-svg-icons';\n\nconst MobileTabBar = () => (\n  <div className=\"mobile-tab-bar d-md-none\">\n    <Nav fill pills>\n      <NavItem>\n        <Link className={`nav-link ${window.location.pathname === '/' ? 'active' : ''}`} to=\"/\">\n          <FontAwesomeIcon icon={faTachometerAlt} />\n          <span>Home</span>\n        </Link>\n      </NavItem>\n      <NavItem>\n        <Link\n          className={`nav-link ${window.location.pathname.startsWith('/article') ? 'active' : ''}`}\n          to=\"/articles/\"\n        >\n          <FontAwesomeIcon icon={faPalette} />\n          <span>Articles</span>\n        </Link>\n      </NavItem>\n      <NavItem>\n        <Link\n          className={`nav-link ${window.location.pathname.startsWith('/example-form') ? 'active' : ''}`}\n          to=\"/example-form/\"\n        >\n          <FontAwesomeIcon icon={faMoneyBillWave} />\n          <span>Form</span>\n        </Link>\n      </NavItem>\n    </Nav>\n  </div>\n);\n\nMobileTabBar.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default withRouter(MobileTabBar);\n","import React from 'react';\nimport { Container, Row, Col } from 'reactstrap';\n\nconst Footer = () => (\n  <footer className=\"bg-dark py-4\">\n    <Container>\n      <Row>\n        <Col>\n          <p className=\"text-center text-secondary\">&copy; ReactStarterKit. All Rights Reserved.</p>\n        </Col>\n      </Row>\n    </Container>\n  </footer>\n);\n\nexport default Footer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Container, Jumbotron } from 'reactstrap';\n\nconst PageTitle = ({ title }) => (\n  <Jumbotron className=\"bg-dark text-white w-100 pb-2 pt-4 mb-0 rounded-0\">\n    <Container>\n      <h1 className=\"text-center\">{title}</h1>\n    </Container>\n  </Jumbotron>\n);\n\nPageTitle.propTypes = {\n  title: PropTypes.string,\n};\n\nPageTitle.defaultProps = {\n  title: '<!-- Missing Title -->',\n};\n\nexport default PageTitle;\n","import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet';\nimport Header from '../UI/Header';\nimport MobileTabBar from '../UI/MobileTabBar';\nimport Footer from '../UI/Footer';\nimport PageTitle from '../UI/PageTitle';\n\nconst Template = ({ pageTitle, children, noPadding }) => (\n  <Fragment>\n    <Helmet>\n      <title>{pageTitle}</title>\n    </Helmet>\n\n    <Header />\n    <PageTitle title={pageTitle} />\n    <div className={noPadding ? null : 'py-3 py-md-5'}>\n      {children}\n    </div>\n    <MobileTabBar />\n    <Footer />\n  </Fragment>\n);\n\nTemplate.propTypes = {\n  pageTitle: PropTypes.string,\n  children: PropTypes.element.isRequired,\n  noPadding: PropTypes.bool,\n};\n\nTemplate.defaultProps = {\n  pageTitle: 'ReactStarterKit',\n  noPadding: false,\n};\n\nexport default Template;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { withRouter } from 'react-router-dom';\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Alert,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  Button,\n} from 'reactstrap';\nimport Template from '../Templates/Dashboard';\nimport { errorMessages } from '../../constants/messages';\n\nconst ArticlesForm = ({\n  error, loading, success, onFormSubmit, defaultValues,\n}) => {\n  const {\n    register, handleSubmit, errors, setValue,\n  } = useForm({ defaultValues });\n\n  return (\n    <Template pageTitle=\"Form\">\n      <Container>\n        <Row>\n          <Col>\n            <Card>\n              <CardBody>\n                <Form onSubmit={handleSubmit(onFormSubmit)}>\n                  {!!success && <Alert color=\"success\">{success}</Alert>}\n                  {!!error && <Alert color=\"danger\">{error}</Alert>}\n                  {!!loading && <Alert color=\"warning\">Loading...</Alert>}\n\n                  <FormGroup className=\"mt-3\">\n                    <Label for=\"email\" className=\"required\">Email</Label>\n                    <Input\n                      type=\"email\"\n                      name=\"email\"\n                      id=\"email\"\n                      placeholder=\"jane@doe.com\"\n                      disabled={loading}\n                      invalid={!!(errors.email)}\n                      innerRef={register({ required: errorMessages.missingEmail })}\n                      onChange={(e) => setValue('email', e.target.value)}\n                    />\n                    {errors.email && <p className=\"invalid-feedback\">{errors.email.message}</p>}\n                  </FormGroup>\n\n                  <Button color=\"primary\" disabled={loading} size=\"lg\">\n                    {loading ? 'Loading' : 'Submit' }\n                  </Button>\n                </Form>\n              </CardBody>\n            </Card>\n          </Col>\n\n        </Row>\n      </Container>\n    </Template>\n  );\n};\n\nArticlesForm.propTypes = {\n  error: PropTypes.string,\n  loading: PropTypes.bool,\n  success: PropTypes.string,\n  defaultValues: PropTypes.shape({\n    email: PropTypes.string,\n  }),\n  onFormSubmit: PropTypes.func.isRequired,\n};\n\nArticlesForm.defaultProps = {\n  error: null,\n  success: null,\n  loading: false,\n  defaultValues: {},\n};\n\nexport default withRouter(ArticlesForm);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Layout from '../../components/Articles/Form';\n\nclass ArticlesFormContainer extends Component {\n  constructor() {\n    super();\n    this.state = { error: null, success: null, loading: false };\n  }\n\n  /**\n   * On Form Submission\n   */\n  onFormSubmit = async (data) => {\n    const { onFormSubmit } = this.props;\n\n    this.setState({ success: null, error: null, loading: true });\n\n    try {\n      const success = await onFormSubmit(data);\n      this.setState({ success, error: null, loading: false });\n    } catch (error) {\n      this.setState({ loading: false, success: null, error: error.message });\n    }\n  }\n\n  /**\n   * Render\n   */\n  render = () => {\n    const { userInput } = this.props;\n    const { error, loading, success } = this.state;\n\n    return (\n      <Layout\n        error={error}\n        loading={loading}\n        success={success}\n        defaultValues={userInput}\n        onFormSubmit={this.onFormSubmit}\n      />\n    );\n  }\n}\n\nArticlesFormContainer.propTypes = {\n  userInput: PropTypes.shape({}).isRequired,\n  onFormSubmit: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  userInput: state.articles.userInput || {},\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onFormSubmit: dispatch.articles.save,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticlesFormContainer);\n","/* global window */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { Pagination, PaginationItem } from 'reactstrap';\n\nconst Component = ({\n  pagination, length, total, loading,\n}) => (\n  <React.Fragment>\n    {(pagination && pagination.length > 0 && !loading) && (\n      <div className=\"d-flex justify-content-between w-100\">\n        <p className=\"text-muted font-italic mt-2\">{`Showing ${length} of ${total}`}</p>\n\n        <Pagination aria-label=\"Pagination\">\n          {pagination.map((page) => (\n            <PaginationItem\n              key={page.link}\n              disabled={(window.location.pathname === page.link)}\n            >\n              <Link to={page.link} className=\"page-link\">{page.title}</Link>\n            </PaginationItem>\n          ))}\n        </Pagination>\n      </div>\n    )}\n  </React.Fragment>\n);\n\nComponent.propTypes = {\n  pagination: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    link: PropTypes.string.isRequired,\n  })),\n  length: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  total: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  loading: PropTypes.bool,\n};\n\nComponent.defaultProps = {\n  pagination: [],\n  length: 0,\n  total: 0,\n  loading: false,\n};\n\nexport default Component;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Link } from 'react-router-dom';\nimport {\n  Container,\n  Row,\n  Col,\n  Table,\n  Card,\n  CardBody,\n  Alert,\n} from 'reactstrap';\nimport Template from '../Templates/Dashboard';\nimport TablePagination from '../UI/TablePagination';\n\nconst List = ({\n  error, loading, listPaginated, page, pagination, meta, history,\n}) => (\n  <Template pageTitle=\"Articles\">\n    <React.Fragment>\n      <Container>\n        <Row>\n          <Col>\n            <Card>\n              <CardBody>\n                {!!error && <Alert color=\"danger\">{error}</Alert>}\n                {(!!loading && (!listPaginated[page] || listPaginated[page].length === 0)) && (\n                  <Alert color=\"warning\">Loading...</Alert>\n                )}\n\n                <TablePagination\n                  pagination={pagination}\n                  length={(listPaginated[page] && listPaginated[page].length) || 0}\n                  total={meta.total}\n                  loading={loading}\n                />\n\n                {(listPaginated[page] && listPaginated[page].length > 0) && (\n                  <Table hover className=\"mobile-list-table\">\n                    <thead className=\"bg-gray-200\">\n                      <tr>\n                        <th style={{ minWidth: '160px' }}>Title</th>\n                        <th style={{ minWidth: '140px' }}>Date Posted</th>\n                        <th className=\"action-column-2\">{' '}</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {listPaginated[page].map((article) => (\n                        <tr key={article.id}>\n                          { /* eslint-disable-next-line */ }\n                          <td\n                            className=\"mobile-list-table-keep\"\n                            onClick={() => history.push(`/article/${article.id}`)}\n                          >\n                            {article.name}\n                          </td>\n                          <td>{article.date}</td>\n                          <td className=\"text-right\">\n                            <Link\n                              to={`/article/${article.id}`}\n                              className={`btn btn-sm btn-primary ml-2\n                                ${(loading || !!article.placeholder) && 'disabled'}\n                              `}\n                            >\n                              View\n                            </Link>\n                          </td>\n                        </tr>\n                      ))}\n                    </tbody>\n                  </Table>\n                )}\n\n                <TablePagination\n                  pagination={pagination}\n                  length={(listPaginated[page] && listPaginated[page].length) || 0}\n                  total={meta.total}\n                  loading={loading}\n                />\n\n                <div className=\"text-center\">\n                  {(!loading && (!listPaginated[page] || listPaginated[page].length === 0)) && (\n                    <p>No Articles found</p>\n                  )}\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  </Template>\n);\n\nList.propTypes = {\n  error: PropTypes.string,\n  loading: PropTypes.bool,\n  listPaginated: PropTypes.shape({}),\n  pagination: PropTypes.arrayOf(PropTypes.shape({\n    title: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    link: PropTypes.string.isRequired,\n  })),\n  page: PropTypes.number.isRequired,\n  meta: PropTypes.shape({ total: PropTypes.number }),\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nList.defaultProps = {\n  error: null,\n  listPaginated: {},\n  loading: false,\n  pagination: [],\n  meta: { total: 0 },\n};\n\nexport default withRouter(List);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Layout from '../../components/Articles/List';\n\nclass ArticlesListContainer extends Component {\n  constructor(props) {\n    super();\n\n    // Prioritize (web) page route over last meta value\n    const page = props.page || props.meta.page;\n\n    this.state = {\n      error: null, loading: false, page: parseInt(page, 10) || 1,\n    };\n  }\n\n  componentDidMount = () => this.fetchData();\n\n  /**\n   * If the page prop changes, update state\n  */\n  componentDidUpdate = (prevProps) => {\n    const { page } = this.props;\n    const { page: prevPage } = prevProps;\n\n    if (page !== prevPage) {\n      // eslint-disable-next-line\n      this.setState({\n        error: null, loading: false, page: parseInt(page, 10) || 1,\n      }, this.fetchData);\n    }\n  }\n\n  /**\n   * Fetch Data\n   */\n  fetchData = async ({ forceSync = false, incrementPage = false } = {}) => {\n    const { fetchData } = this.props;\n\n    let { page } = this.state;\n    page = incrementPage ? page + 1 : page; // Force fetch the next page worth of data when requested\n    page = forceSync ? 1 : page; // Start from scratch\n\n    this.setState({ loading: true, error: null, page });\n\n    try {\n      await fetchData({ forceSync, page });\n      this.setState({ loading: false, error: null });\n    } catch (err) {\n      this.setState({ loading: false, error: err.message });\n    }\n  };\n\n  /**\n   * Render\n   */\n  render = () => {\n    const {\n      listFlat, listPaginated, pagination, meta,\n    } = this.props;\n    const { loading, error, page } = this.state;\n\n    return (\n      <Layout\n        page={page}\n        meta={meta}\n        error={error}\n        loading={loading}\n        listFlat={listFlat}\n        listPaginated={listPaginated}\n        pagination={pagination}\n        reFetch={this.fetchData}\n      />\n    );\n  };\n}\n\nArticlesListContainer.propTypes = {\n  listFlat: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\n  listPaginated: PropTypes.shape({}).isRequired,\n  meta: PropTypes.shape({\n    page: PropTypes.number,\n  }).isRequired,\n  fetchData: PropTypes.func.isRequired,\n  pagination: PropTypes.arrayOf(PropTypes.shape()).isRequired,\n  page: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nArticlesListContainer.defaultProps = {\n  page: 1,\n};\n\nconst mapStateToProps = (state) => ({\n  listFlat: state.articles.listFlat || [],\n  listPaginated: state.articles.listPaginated || {},\n  meta: state.articles.meta || [],\n  pagination: state.articles.pagination || {},\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchData: dispatch.articles.fetchList,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticlesListContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter, Link, Redirect } from 'react-router-dom';\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardBody,\n  Alert,\n  CardImg,\n} from 'reactstrap';\nimport Template from '../Templates/Dashboard';\n\nconst Single = ({\n  error, loading, article,\n}) => {\n  if (!loading && !article) return <Redirect to=\"/404\" />;\n\n  return (\n    <Template pageTitle={article.name || 'Article'}>\n      <React.Fragment>\n        <Container>\n          <Row>\n            <Col md=\"12\">\n              {!!error && <Alert color=\"danger\">{error}</Alert>}\n              {!!loading && <Alert color=\"warning\">Loading...</Alert>}\n            </Col>\n\n            {article.id && (\n              <Col md={{ size: 6, offset: 3 }}>\n                <Card>\n                  {article.image && (\n                    <CardImg top width=\"100%\" src={article.image} alt={article.name} />\n                  )}\n                  <CardBody>\n                    Posted\n                    {' '}\n                    {article.date ? article.date : 'n/a'}\n                    <hr />\n                    {/* eslint-disable-next-line */}\n                    {article.contentRaw && <div dangerouslySetInnerHTML={{ __html: article.contentRaw }} />}\n                  </CardBody>\n                </Card>\n              </Col>\n            )}\n          </Row>\n\n          <Row>\n            <Col className=\"text-center my-5 mb-md-0\">\n              <Link to=\"/articles/\" className=\"btn btn-secondary\">Back</Link>\n            </Col>\n          </Row>\n        </Container>\n      </React.Fragment>\n    </Template>\n  );\n};\n\nSingle.propTypes = {\n  error: PropTypes.string,\n  loading: PropTypes.bool,\n  article: PropTypes.shape({\n    placeholder: PropTypes.bool,\n    id: PropTypes.number,\n    name: PropTypes.string,\n    date: PropTypes.string,\n    content: PropTypes.string,\n    contentRaw: PropTypes.string,\n    excerpt: PropTypes.string,\n    image: PropTypes.string,\n  }),\n};\n\nSingle.defaultProps = {\n  error: null,\n  loading: false,\n  article: {},\n};\n\nexport default withRouter(Single);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Layout from '../../components/Articles/Single';\n\nclass ArticlesSingleContainer extends Component {\n  constructor() {\n    super();\n    this.state = { loading: false, error: null, article: {} };\n  }\n\n  componentDidMount = () => this.fetchData();\n\n  /**\n   * Fetch Data\n   */\n  fetchData = async () => {\n    const { fetchData, id } = this.props;\n\n    this.setState({ loading: true, error: null });\n\n    try {\n      const article = await fetchData(id);\n      this.setState({ loading: false, error: null, article });\n    } catch (err) {\n      this.setState({ loading: false, error: err.message, article: {} });\n    }\n  };\n\n  /**\n   * Render\n   */\n  render = () => {\n    const { loading, error, article } = this.state;\n\n    return <Layout loading={loading} error={error} article={article} reFetch={this.fetchData} />;\n  };\n}\n\nArticlesSingleContainer.propTypes = {\n  fetchData: PropTypes.func.isRequired,\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n\nArticlesSingleContainer.defaultProps = {\n  id: null,\n};\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchData: dispatch.articles.fetchSingle,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ArticlesSingleContainer);\n","import React from 'react';\nimport {\n  Row, Col, Jumbotron, Container,\n} from 'reactstrap';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faTachometerAlt, faPalette, faMoneyBillWave, faCertificate, faPlus, faUserCircle,\n} from '@fortawesome/free-solid-svg-icons';\nimport Template from './Templates/Dashboard';\n\nconst About = () => (\n  <Template pageTitle=\"Hello World\" noPadding>\n    <React.Fragment>\n      <Container>\n        <Row className=\"mb-2 mt-md-5\">\n          <Jumbotron className=\"bg-primary text-white rounded-0\">\n            <h2>Lorem Ipsum is simply dummy text.</h2>\n            <p className=\"lead\">\n              Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n              Lorem Ipsum has been the industry's standard dummy text ever since the 1500s.\n            </p>\n            <p>\n              Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n              Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an\n              unknown printer took a galley of type and scrambled it to make a type specimen book.\n              It has survived not only five centuries.\n            </p>\n          </Jumbotron>\n        </Row>\n        <Row>\n          <Col md=\"4\" className=\"mt-3\">\n            <h3>\n              <FontAwesomeIcon icon={faTachometerAlt} />\n              {' '}\n              Lorem Ipsum\n            </h3>\n            <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\n            <p><Link to=\"/articles\" className=\"btn btn-primary\">Learn More</Link></p>\n          </Col>\n          <Col md=\"4\" className=\"mt-3\">\n            <h3>\n              <FontAwesomeIcon icon={faPalette} />\n              {' '}\n              Lorem Ipsum\n            </h3>\n            <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\n            <p><Link to=\"/articles\" className=\"btn btn-primary\">Learn More</Link></p>\n          </Col>\n          <Col md=\"4\" className=\"mt-3\">\n            <h3>\n              <FontAwesomeIcon icon={faMoneyBillWave} />\n              {' '}\n              Lorem Ipsum\n            </h3>\n            <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\n            <p><Link to=\"/articles\" className=\"btn btn-primary\">Learn More</Link></p>\n          </Col>\n        </Row>\n        <Row>\n          <Col md=\"4\" className=\"mt-3\">\n            <h3>\n              <FontAwesomeIcon icon={faCertificate} />\n              {' '}\n              Lorem Ipsum\n            </h3>\n            <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\n            <p><Link to=\"/articles\" className=\"btn btn-primary\">Learn More</Link></p>\n          </Col>\n          <Col md=\"4\" className=\"mt-3\">\n            <h3>\n              <FontAwesomeIcon icon={faPlus} />\n              {' '}\n              Lorem Ipsum\n            </h3>\n            <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\n            <p><Link to=\"/articles\" className=\"btn btn-primary\">Learn More</Link></p>\n          </Col>\n          <Col md=\"4\" className=\"mt-3\">\n            <h3>\n              <FontAwesomeIcon icon={faUserCircle} />\n              {' '}\n              Lorem Ipsum\n            </h3>\n            <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry.</p>\n            <p><Link to=\"/articles\" className=\"btn btn-primary\">Learn More</Link></p>\n          </Col>\n        </Row>\n      </Container>\n\n      <hr className=\"mt-5\" />\n\n      <Container>\n        <Row className=\"py-5\">\n          <Col xs={{ size: 6, offset: 3 }} lg={{ size: 2, offset: 2 }} className=\"text-center\">\n            <img className=\"img-fluid rounded-circle d-inline-block\" src=\"https://avatars0.githubusercontent.com/u/1809236?s=460&v=4\" alt=\"Matt Mcnamee\" />\n          </Col>\n          <Col lg=\"5\" className=\"mt-4 text-center text-lg-left\">\n            <h3>I can help</h3>\n            <p>\n              This repo is a great place to start, but if you'd prefer to sit back and have your new\n              project built for you,\n              {' '}\n              <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://mcnam.ee\">\n                get in touch with me directly\n              </a>\n              {' '}\n              and I'll provide a quote.\n            </p>\n          </Col>\n        </Row>\n      </Container>\n    </React.Fragment>\n  </Template>\n);\n\nexport default withRouter(About);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Row, Col } from 'reactstrap';\n// import { Link } from 'react-router-dom';\n\nconst Error = ({ title, content }) => (\n  <Row className=\"py-5 my-5\">\n    <Col md={{ size: 4, offset: 4 }}>\n      <h2 className=\"text-center\">{title}</h2>\n      <p className=\"text-center\">{content}</p>\n      {/* <p className=\"text-center\"><Link to=\"/\" className=\"btn btn-primary\">Go Home</Link></p> */}\n    </Col>\n  </Row>\n);\n\nError.propTypes = {\n  title: PropTypes.string,\n  content: PropTypes.string,\n};\n\nError.defaultProps = {\n  title: 'Uh oh',\n  content: 'An unexpected error came up',\n};\n\nexport default Error;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport CustomRoute from './Route';\n// import PrivateRoute from './PrivateRoute';\n\n// Containers\nimport {\n  ArticlesList,\n  ArticlesSingle,\n  ArticlesForm,\n} from '../containers';\n\n// Components\nimport About from '../components/About';\nimport Error from '../components/UI/Error';\n\n/**\n * All of the routes\n */\nconst Index = () => (\n  <Switch>\n    <Route path=\"/\" exact component={About} />\n\n    {/* Articles */}\n    <CustomRoute path=\"/articles/:page?\" component={ArticlesList} />\n    <CustomRoute path=\"/article/:id\" component={ArticlesSingle} />\n    <CustomRoute path=\"/example-form\" component={ArticlesForm} />\n\n    {/* 404 */}\n    <Route\n      render={(props) => (\n        <Error {...props} title=\"404\" content=\"Sorry, the route you requested does not exist\" />\n      )}\n    />\n  </Switch>\n);\n\nexport default Index;\n","import React from 'react';\nimport { Row, Col, Progress } from 'reactstrap';\n\nconst Loading = () => (\n  <Row>\n    <Col md={{ size: 6, offset: 3 }}>\n      <div className=\"page-is-loading\">\n        <Progress bar animated value=\"100\">Loading</Progress>\n      </div>\n    </Col>\n  </Row>\n);\n\nexport default Loading;\n","/* global document */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/es/integration/react';\n\nimport configureStore from './store/index';\nimport * as serviceWorker from './lib/service-worker';\nimport Routes from './routes/index';\n\n// Components\nimport Loading from './components/UI/Loading';\n\n// Load css\nimport './assets/styles/style.scss';\n\nconst { persistor, store, dispatch } = configureStore();\n// persistor.purge(); // Debug to clear persist\n\nconst Root = () => (\n  <Provider store={store}>\n    <PersistGate loading={<Loading />} persistor={persistor}>\n      <Router dispatch={dispatch} store={store}>\n        <Routes />\n      </Router>\n    </PersistGate>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}